<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.NewsManagement</groupId>
    <artifactId>NewsManagement</artifactId>
    <version>1.0-SNAPSHOT</version>


    <!--指定web项目-->
    <packaging>war</packaging>
    <!--更改版本-->
    <properties>
        <!--源代码使用的Java语言版本-->
        <maven.compiler.source>1.8</maven.compiler.source>
        <!--编译器使用的Java语言版本(即 ，哪一个版本以上的Java可以运行这个编译后的文件)-->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring.version>4.3.7.RELEASE</spring.version>
    </properties>

    <dependencies>

        <!--spring jar-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>


        <!--spring jdbc jar-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>4.3.7.RELEASE</version>
        </dependency>


        <!--mybatis jar-->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.3.1</version>
        </dependency>

        <!--spring mybatis 好基友包-->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.3.1</version>
        </dependency>
        <!--阿里连接池-->

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>1.0.29</version>
        </dependency>
        <!--mysql jdbc jar-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.41</version>
            <!--runtime编译的时候用不上，但是运行上用的到，叫做运行实现-->
            <!--代表编译时用不到，在运行时才能用到
              compile：编译以及运行时都会用到
              runtime：编译时用不到，运行时需要使用
              provided：编译时会用到，运行时用不到-->
            <scope>runtime</scope>
        </dependency>

        <!--  ***********************model分界线***************-->
        <!--  spring web jar-->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!--  spring mvc jar-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!--jstl-->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>


        <!--为了提示效果jar-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>

            <!--代表编译时用不到，在运行时才能用到
               compile：编译以及运行时都会用到
               runtime：编译时用不到，运行时需要使用
               provided：编译时会用到，运行时用不到-->
            <scope>provided</scope>
        </dependency>

        <!--工作日志jar包-->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>


        <!-- 测试包-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>


        <!--分页的jar包  只能在spring平台上使用-->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
            <version>5.0.0</version>
        </dependency>

        <!-- 由于使用了sql解析工具，你还需要下载这个文件（这个文件完全独立，不依赖其他）：-->
        <dependency>
            <groupId>com.github.jsqlparser</groupId>
            <artifactId>jsqlparser</artifactId>
            <version>0.9.6</version>
        </dependency>
        <!--文件上传包-->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.2</version>
        </dependency>


        <!--io包-->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId> commons-io</artifactId>
            <version>2.2</version>
        </dependency>
    </dependencies>


    <!--新标签build  设置maven打包参数-->
    <build>
        <!--运行插件-->
        <plugins>
            <plugin>
                <!--插件地址-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!--configuration插件运行时的参数设置-->
                <configuration>
                    <!--定义书写时级别-->
                    <source>1.8</source>
                    <!--打包是级别-->
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>